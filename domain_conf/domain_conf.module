<?php

// $Id$

/**
 * @file
 * Domain manager configuration options.
 *
 * By design, this only contains a menu hook and a router.  No need to load
 * the entire code except when requested.
 *
 * For this module to work correctly, you will need to follow the INSTALL.txt 
 * instructions for editing your settings.php file.
 */

/**
 * Implements hook_menu()
 *
 * @ingroup drupal
 */
function domain_conf_menu($may_cache) {
  $items = array();
  if (!$may_cache) {
    $items[] = array(
      'title' => t('Domain site settings'),
      'path' => 'admin/build/domain/conf',
      'access' => user_access('administer domains'),
      'type' => MENU_CALLBACK,
      'callback' => 'domain_conf_page',
      'callback arguments' => array(arg(4))      
    );    
  }
  return $items;
}

/**
 * The domain conf page callback router.
 *
 * @param $domain_id
 *  The unique identifier for this domain, taken from {domain}.
 *
 * @ingroup conf
 */
function domain_conf_page($domain_id) {
  global $_domain;
  $domain = domain_lookup($domain_id);
  if ($domain['domain_id']) {
    // Ensure we are on the proper domain.
    domain_goto($domain);
    include_once('domain_conf_form.inc');
    drupal_set_title(t('!site : Domain site settings', array('!site' => $domain['sitename'])));
    return drupal_get_form('system_site_information_settings');
  }
  else {
    return t('Invalid domain request.');
  } 
}

/**
 * Implements hook_domainlinks()
 *
 * @ingroup conf
 */
function domain_conf_domainlinks($domain) {
  $links[] = array(
    'title' => t('settings'),
    'path' => 'admin/build/domain/conf/'. $domain['domain_id']
  );
  return $links;
}